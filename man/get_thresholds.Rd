% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_thresholds.R
\name{get_thresholds}
\alias{get_thresholds}
\title{Get score thresholds for ACMG/AMP evidence levels}
\usage{
get_thresholds(df, group = NULL, prior = 0.1)
}
\arguments{
\item{df}{A dataframe containing the variants to classify. Must contain a
score column (any name) and columns matching the \verb{*_lr}, \verb{*_lr_lower},
and \verb{*_lr_upper} patterns, added with \link{add_likelihood_ratios}.}

\item{group}{(optional) A character string indicating the name of the column
with the grouping variable. Default NULL.}

\item{prior}{(optional) A scalar in the range 0-1 representing the prior
probability of pathogenicity. Default 0.1.}
}
\value{
A dataframe (when group = NULL) or list of dataframes for groups
containing the thresholds for all score columns in the data. The first
column in the dataframe is \code{evidence}, which represents the threshold
between two adjacent evidence strengths, e.g., 'p_supporting|p_moderate'.
}
\description{
This function calculates classification thresholds for variant pathogenicity
based on their likelihood ratios. It returns the score values corresponding
to ACMG/AMP evidence strengths under the predefined prior.
}
\details{
The function automatically detects columns ending in \verb{_lr} and their
corresponding confidence bounds, and uses them to interpolate the score
thresholds. If a grouping variable is provided, the function computes
thresholds separately for each group and returns a list of dataframes.
The prior probability of pathogenicity can be specified, affecting the
positioning of evidence thresholds.
}
\examples{
# load the example data provided with the package
library(acmgscaler)
data(variant_data, package = 'acmgscaler')

# compute likelihood ratios
variant_data_lr <- add_likelihood_ratios(
  df = variant_data,
  # provide the column containing the variant scores (optional)
  value = 'score',
  # provide a grouping variable (optional)
  group = 'gene',
  # prior probability of pathogenicity for classification
  prior = 0.1
)

# determine thresholds
get_thresholds(
  df = variant_data_lr,
  # provide the grouping variable
  group = 'gene',
  # prior probability of pathogenicity (should be the same as before)
  prior = 0.1
)


}
